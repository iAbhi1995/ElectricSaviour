server.port=9001

#Gmail API Configuration
gmail.client.clientId=################################.apps.googleusercontent.com
gmail.client.clientSecret=##################
gmail.client.accessTokenUri=https://accounts.google.com/o/oauth2/token
gmail.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/auth
gmail.client.clerA
ientAuthenticationScheme=query
gmail.client.scope=https://mail.google.com/,https://www.googleapis.com/auth/gmail.modify,https://www.googleapis.com/auth/gmail.readonly,https://www.googleapis.com/auth/gmail.send
gmail.resource.userInfoUri=https://www.googleapis.com/gmail/v1/users/me/profile
gmail.resource.preferTokenInfo=true
gmail.client.redirectUri=http://localhost:9000/login/gmailCallback



#DataBase configuration
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/smartindia
spring.datasource.username=devopsnit
spring.datasource.password=abhi


#CREATE TABLE ticket( id VARCHAR(30) PRIMARY KEY, customerId VARCHAR(30) NOT NULL, subject VARCHAR(100), department_id VARCHAR(30) NOT NULL, description VARCHAR(50000), dateCreated VARCHAR(30));
hibernate.dialect=org.hibernate.dialect.MySQLDialect


# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads
